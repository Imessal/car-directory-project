UPD: Добавил докерфайл для развертывания приложения. Так как используется внешняя база данных, то application.conf
нужно будет редактировать в любом случае. А так, сейчас все зависимости сами должны будут подгрузиться при запуске через докер. 

Тестовое задание "Справочник автомобилей"

Для разработки использовал Play и Slick + MySQL
Архитектура MVSC
    Сама модель в models/CarHandler. Там классы самого автомобиля, класс и форма для взаимодействия с бд, а также классы,
которые изначально планировались для представления номера автомобиля: Number и NumberBuilder, но в финальную версию так и не вошли,
но удалять было жалко.
    Контроллер из controllers/HomeController взаимодействет с services/CarService (которая просто прослойка между контроллером и моделью)
Контроллер выполняет свою функцию - работает с моделью и представляет результат в виде html
    Во views лежат html-ки, используемые для взаимодействия с программой. main, потому что она создалась вместе с проектом, index -
основная страница с самой таблицей автомобилей, register - форма регистрации нового автомобиля, а error задумывалась как сообщение
об ошибке, но мне не хватило опыта/знаний фреймворка и веба, чтобы адекватно ее использовать, поэтому сообщения об ошибке не существует -
авто просто не добавится в базу.
    Скрипты и стили для html-ек лежат в public. Из интересного: функция, которая позволяет отсортировать по какому-либо критерию, кликнув на него,
вывод статистики по базе.
    Внешний вид не самый изящный и даже можно сказать безвкусный, но это лучше чем ничего. Вместо автомобилей по краям можно пустить рекламу)
    Верстка в хроме почему-то немного съезжает, но в принципе не критично. В сафари всё нормально.
    Для запуска необходимо настроить базу данных (логин и пароль юзера наверное можно хранить в переменных окружения, но я не заморачивался)
SQL-файл для создания самой таблицы можно найти в папке conf. Там же в application.conf настраивается подключение к базе.
    Чисто формальные тесты лежат в папке test, но особо функционал они не тестируют - т.к. используется внешняя бд. Можно было наверное использовать
моки или что-то подобное, но я не стал заморачиваться.
    Сам проект запускается на sbt run

PS: У меня практически нет опыта работы с Play и Slick, поэтому некоторые решения могут показаться сомнительными, а может и вовсе глупыми.
    Прошу отнестись с пониманием.